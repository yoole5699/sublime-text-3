{
    "scope": "source.js",

    "completions":
    [

      { "trigger": "adm", "contents": "action.data.message || '$1成功'," },
      { "trigger": "afr", "contents": "asyncFuncResult: {\n\t...asyncFuncResult,\n\t$1: null,\n}" },
      { "trigger": "afri", "contents": "asyncFuncResult: asyncFuncResult," },
      { "trigger": "afrs", "contents": "asyncFuncResult: {\n\t...asyncFuncResult,\n\t$1: {\n\t\ttype: 'success',\n\t\ttitle: action.data.message || '$2成功'\n\t},\n}" },
      { "trigger": "afre", "contents": "asyncFuncResult: {\n\t...asyncFuncResult,\n\t$1: {\n\t\tstatus: action.error.status,\n\t\ttitle: action.error.message || action.error.data.message || '$2失败',\n\t\ttype: 'error',\n\t},\n}" },
      { "trigger": "ic", "contents": "import ${1:Component} from './${2:containers}/$1';" },
      { "trigger": "icc", "contents": "import ${1:Component} from '@components/$2/$1';" },
      { "trigger": "ir", "contents": "import ${1:} from './$1';" },
      { "trigger": "ii", "contents": "import ${1:}PNG from 'resource/image/${1:}.png';" },
      { "trigger": "iu", "contents": "import ${1:} from '@utils/$2';" },
      { "trigger": "iw", "contents": "import watermarkDecorator from '@utils/decorator';" },
      { "trigger": "irr", "contents": "import { ${1:} } from '@utils/requestUtils';" },
      { "trigger": "ia", "contents": "import { $1 } from '@actions/$2';" },
      { "trigger": "ima", "contents": "import * as $1 from '@actions/$2';" },
      { "trigger": "imb", "contents": "import { $1 } from '@mtfe/block';" },
      { "trigger": "imbu", "contents": "import M from '@mtfe/block-utils';" },
      { "trigger": "imc", "contents": "import $1 from '@components/common/$1';" },
      { "trigger": "imt", "contents": "import { $1 } from '@actions/ActionTypes';" },
      { "trigger": "ims", "contents": "import '@styles/$1.scss';" },
      { "trigger": "is", "contents": "import styled from 'styled-components';" },
      { "trigger": "imad", "contents": "import { ${1:Card} } from 'antd';" },
      { "trigger": "imd", "contents": "import $1 from '$2';" },
      { "trigger": "imk", "contents": "import { $1 } from '$2';" },
      { "trigger": "imh", "contents": "import { hashHistory } from 'react-router';" },
      { "trigger": "cv", "contents": "const ${1:variable} = ${2:undefined};" },
      { "trigger": "cr", "contents": "const $2${1:variable} = require('$1');" },
      { "trigger": "cvd", "contents": "const { $1 } = ${2:undefined};" },
      { "trigger": "cvp", "contents": "const { $1 } = this.props;" },
      { "trigger": "cvs", "contents": "const { $1 } = this.state;" },
      { "trigger": "cc", "contents": "const ${1:Component} = ($2) => (\n\t$3\n);"},
      { "trigger": "lv", "contents": "let ${1:output} = ${2:undefined};" },
      { "trigger": "et", "contents": "e.target.$1" },
      { "trigger": "pa", "contents": "${1:onClick}={(e) => { $2 } }" },
      { "trigger": "pf", "contents": "${2:${1:prop}}={this.$1}" },
      { "trigger": "ps", "contents": "${1:key}=\"$2\"" },
      { "trigger": "pv", "contents": "${1:key}={$2}" },
      { "trigger": "pp", "contents": "${1}={$1}" },
      { "trigger": "cst", "contents": "constructor(props) {\n\tsuper(props);\n\tthis.state = {\n\t\t$1: $2,\n\t}\n}\n" },
      { "trigger": "cwm", "contents": "componentWillMount() {\n\t$1\n}" },
      { "trigger": "cdm", "contents": "componentDidMount() {\n\t$1\n}" },
      { "trigger": "cwr", "contents": "componentWillReceiveProps(nextProps) {\n\t$1\n}" },
      { "trigger": "cwu", "contents": "componentWillUpdate(nextProps, nextState) {\n\t$1\n}" },
      { "trigger": "cwum", "contents": "componentWillUnmount() {\n\tconsole.log('unmout')$1\n}" },
      { "trigger": "cdu", "contents": "componentDidUpdate() {\n\t$1\n}" },
      { "trigger": "scu", "contents": "shouldComponentUpdate(${1:nextProps}, ${2:nextState}) {\n\t$3\n}" },
      { "trigger": "msp", "contents": "const mapStateToProps = (state) => ({ $1 });"},
      { "trigger": "mdp", "contents": "const mapDispatchToProps = (dispatch) => ({ $1 });"},
      { "trigger": "cl", "contents": "console.log(${1:yoole}, '---$1---');" },
      { "trigger": "tp", "contents": "this.props.${1:data}" },
      { "trigger": "ts", "contents": "this.state.${1:data}" },
      { "trigger": "am", "contents": "${1:handle} = (${2:e}) => {\n\t$3\n}" },
      { "trigger": "amr", "contents": "${1:handle}Handler = (row) => {\n\t$3\n}" },
      { "trigger": "af", "contents": "${1:(data)} => {\n\t$2\n}" },
      { "trigger": "aa", "contents": "${1:data} = action(($2) => {\n\tthis.$3\n})" },
      { "trigger": "ac", "contents": "${1:(data)} => (\n\t$2\n)" },
      { "trigger": "caf", "contents": "const ${1:func} = (${2:args}) => {\n\t$3\n}"},
      { "trigger": "csc", "contents": "const ${1:func} = styled.${2:div}`\n\t$3\n`;" },
      { "trigger": "cse", "contents": "const ${1:func} = ${2:div}.extend`\n\t$3\n`;" },
      { "trigger": "re", "contents": "return (\n\t$1\n);" },
      { "trigger": "me", "contents": "module.exports = $1;"},
      { "trigger": "ek", "contents": "exports.${1:key} = $2;"},
      { "trigger": "ep", "contents": "exports.${1:key} = ${1};"},
      { "trigger": "sp", "contents": "static propTypes = {\n\t$1: $2\n}"},
      { "trigger": "ftt", "contents": "function test() {\n\tconsole.log(Date.now(), '---start---');\n\t$1\n\tconsole.log(Date.now(), '---end---');\n}"},
      { "trigger": "rm", "contents": "router.${1:get}('$2', async ctx => {\n\t$3\n})"},
    ]
}